[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Amanda Herbst",
    "section": "",
    "text": "My name is Amanda Herbst and this is where I will put my bio"
  },
  {
    "objectID": "index.html#intro",
    "href": "index.html#intro",
    "title": "Amanda Herbst",
    "section": "",
    "text": "My name is Amanda Herbst and this is where I will put my bio"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Amanda Herbst",
    "section": "Education",
    "text": "Education\nMaster of Environmental Data Science, UCSB (2024)\nBS, Chemistry, minor in Dance, Cal Poly SLO (2022)"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Amanda Herbst",
    "section": "Experience",
    "text": "Experience"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html",
    "href": "blog/2023-10-23-my-first-post/index.html",
    "title": "My first blog post",
    "section": "",
    "text": "Time to blog!1\ninsert interesting things here!"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#this-is-my-first-section",
    "href": "blog/2023-10-23-my-first-post/index.html#this-is-my-first-section",
    "title": "My first blog post",
    "section": "",
    "text": "Time to blog!1\ninsert interesting things here!"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#this-is-my-second-section",
    "href": "blog/2023-10-23-my-first-post/index.html#this-is-my-second-section",
    "title": "My first blog post",
    "section": "This is my second section",
    "text": "This is my second section\nHello world!2\nI learned everything I know about blogging here (Csik 2022).\nI’m citing another resource here (Gaynor et al. 2022)."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "href": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "title": "My first blog post",
    "section": "Footnotes",
    "text": "Footnotes\n\n\na footnote!↩︎\nThis is an inline footnote :)↩︎"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "ipynb rendered as html\n\n\nThis post was rendered from an .ipynb notebook through quarto\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualization of Thomas Fire Impact on Santa Barbara\n\n\n\nQuarto\n\n\nMEDS\n\n\nPython\n\n\nGeospatial\n\n\n\nInvestigating and visualizing the impacts of the 2017 Thomas Fire on the air and land quality in Santa Barbara county\n\n\n\nAmanda Herbst\n\n\nDec 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRelationship between chlorophyll-a and nutrients in the Santa Barbara Channel\n\n\n\nQuarto\n\n\nMEDS\n\n\nStatistics\n\n\nRegression Model\n\n\nR\n\n\n\nCharacterizing a statistically significant overall relationship between chlorophyll-a and phosphate and dissolved inorganic nitrogen.\n\n\n\nAmanda Herbst\n\n\nOct 23, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html",
    "href": "blog/python-trial-render/STAC-search.html",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Code\nimport numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\n\nfrom shapely.geometry import Polygon\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# other libraries for nice outputs\nfrom IPython.display import Image"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#exploration",
    "href": "blog/python-trial-render/STAC-search.html#exploration",
    "title": "ipynb rendered as html",
    "section": "Exploration",
    "text": "Exploration\nLet’s check out some of the catalog’s metadata:\n\n\nCode\n# metadata from the catalog\nprint('Title: ', catalog.title)\nprint('Description: ', catalog.description)\n\n\nTitle:  Microsoft Planetary Computer STAC API\nDescription:  Searchable spatiotemporal metadata describing Earth science datasets hosted by the Microsoft Planetary Computer\n\n\nWe can access the catalog’s collections by using the get_collections() method:\n\n\nCode\ncatalog.get_collections()\n\n\n&lt;generator object Client.get_collections at 0x18bfe1cf0&gt;\n\n\nNotice the output of the get_collections() is a generator.\nThis is a special kind of lazy object in Python over which you can loop over like a list. Unlike a list, the items in the generator do not exist in memory until you explicitly iterate over them or convert them to a list.\nLet’s try getting the collections from the catalog again:\n\n\nCode\n# get collections and print their names\ncollections = list(catalog.get_collections())\nprint('Number of collections :', len(collections))\nprint('Collections IDs: ')\n\nfor collection in collections:\n    print('- ', collection.id)\n\n\nNumber of collections : 122\nCollections IDs: \n-  daymet-annual-pr\n-  daymet-daily-hi\n-  3dep-seamless\n-  3dep-lidar-dsm\n-  fia\n-  sentinel-1-rtc\n-  gridmet\n-  daymet-annual-na\n-  daymet-monthly-na\n-  daymet-annual-hi\n-  daymet-monthly-hi\n-  daymet-monthly-pr\n-  gnatsgo-tables\n-  hgb\n-  cop-dem-glo-30\n-  cop-dem-glo-90\n-  goes-cmi\n-  terraclimate\n-  nasa-nex-gddp-cmip6\n-  gpm-imerg-hhr\n-  gnatsgo-rasters\n-  3dep-lidar-hag\n-  3dep-lidar-intensity\n-  3dep-lidar-pointsourceid\n-  mtbs\n-  noaa-c-cap\n-  3dep-lidar-copc\n-  modis-64A1-061\n-  alos-fnf-mosaic\n-  3dep-lidar-returns\n-  mobi\n-  landsat-c2-l2\n-  era5-pds\n-  chloris-biomass\n-  kaza-hydroforecast\n-  planet-nicfi-analytic\n-  modis-17A2H-061\n-  modis-11A2-061\n-  daymet-daily-pr\n-  3dep-lidar-dtm-native\n-  3dep-lidar-classification\n-  3dep-lidar-dtm\n-  gap\n-  modis-17A2HGF-061\n-  planet-nicfi-visual\n-  gbif\n-  modis-17A3HGF-061\n-  modis-09A1-061\n-  alos-dem\n-  alos-palsar-mosaic\n-  deltares-water-availability\n-  modis-16A3GF-061\n-  modis-21A2-061\n-  us-census\n-  jrc-gsw\n-  deltares-floods\n-  modis-43A4-061\n-  modis-09Q1-061\n-  modis-14A1-061\n-  hrea\n-  modis-13Q1-061\n-  modis-14A2-061\n-  sentinel-2-l2a\n-  modis-15A2H-061\n-  modis-11A1-061\n-  modis-15A3H-061\n-  modis-13A1-061\n-  daymet-daily-na\n-  nrcan-landcover\n-  modis-10A2-061\n-  ecmwf-forecast\n-  noaa-mrms-qpe-24h-pass2\n-  sentinel-1-grd\n-  nasadem\n-  io-lulc\n-  landsat-c2-l1\n-  drcog-lulc\n-  chesapeake-lc-7\n-  chesapeake-lc-13\n-  chesapeake-lu\n-  noaa-mrms-qpe-1h-pass1\n-  noaa-mrms-qpe-1h-pass2\n-  noaa-nclimgrid-monthly\n-  goes-glm\n-  usda-cdl\n-  eclipse\n-  esa-cci-lc\n-  esa-cci-lc-netcdf\n-  fws-nwi\n-  usgs-lcmap-conus-v13\n-  usgs-lcmap-hawaii-v10\n-  noaa-climate-normals-tabular\n-  noaa-climate-normals-netcdf\n-  noaa-climate-normals-gridded\n-  aster-l1t\n-  cil-gdpcir-cc-by-sa\n-  io-lulc-9-class\n-  io-biodiversity\n-  naip\n-  noaa-cdr-sea-surface-temperature-whoi\n-  noaa-cdr-ocean-heat-content\n-  cil-gdpcir-cc0\n-  cil-gdpcir-cc-by\n-  noaa-cdr-sea-surface-temperature-whoi-netcdf\n-  noaa-cdr-sea-surface-temperature-optimum-interpolation\n-  modis-10A1-061\n-  sentinel-5p-l2-netcdf\n-  sentinel-3-olci-wfr-l2-netcdf\n-  noaa-cdr-ocean-heat-content-netcdf\n-  sentinel-3-synergy-aod-l2-netcdf\n-  sentinel-3-synergy-v10-l2-netcdf\n-  sentinel-3-olci-lfr-l2-netcdf\n-  sentinel-3-sral-lan-l2-netcdf\n-  sentinel-3-slstr-lst-l2-netcdf\n-  sentinel-3-slstr-wst-l2-netcdf\n-  sentinel-3-sral-wat-l2-netcdf\n-  ms-buildings\n-  sentinel-3-slstr-frp-l2-netcdf\n-  sentinel-3-synergy-syn-l2-netcdf\n-  sentinel-3-synergy-vgp-l2-netcdf\n-  sentinel-3-synergy-vg1-l2-netcdf\n-  esa-worldcover"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#collection",
    "href": "blog/python-trial-render/STAC-search.html#collection",
    "title": "ipynb rendered as html",
    "section": "Collection",
    "text": "Collection\nWe can select a single collection for exploration using the get_child() method for the catalog and the collection id as the parameter:\n\n\nCode\nnaip_collection = catalog.get_child('naip')\nnaip_collection\n\n\n\n\n\n    \n    \n    \n        \n            \n                \n                    CollectionClient: naip\n                \n            \n            \n\n\n\n\n\n\nid: naip\n\n\ntitle: NAIP: National Agriculture Imagery Program\n\n\ndescription: The [National Agriculture Imagery Program](https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/) (NAIP) provides U.S.-wide, high-resolution aerial imagery, with four spectral bands (R, G, B, IR). NAIP is administered by the [Aerial Field Photography Office](https://www.fsa.usda.gov/programs-and-services/aerial-photography/) (AFPO) within the [US Department of Agriculture](https://www.usda.gov/) (USDA). Data are captured at least once every three years for each state. This dataset represents NAIP data from 2010-present, in [cloud-optimized GeoTIFF](https://www.cogeo.org/) format.\n\n\nproviders:\n\n\nUSDA Farm Service Agency (producer, licensor)\n\n\nEsri (processor)\n\n\nMicrosoft (host, processor)\n\n\n\n\ntype: Collection\n\n\nitem_assets: {'image': {'type': 'image/tiff; application=geotiff; profile=cloud-optimized', 'roles': ['data'], 'title': 'RGBIR COG tile', 'eo:bands': [{'name': 'Red', 'common_name': 'red'}, {'name': 'Green', 'common_name': 'green'}, {'name': 'Blue', 'common_name': 'blue'}, {'name': 'NIR', 'common_name': 'nir', 'description': 'near-infrared'}]}, 'metadata': {'type': 'text/plain', 'roles': ['metadata'], 'title': 'FGDC Metdata'}, 'thumbnail': {'type': 'image/jpeg', 'roles': ['thumbnail'], 'title': 'Thumbnail'}}\n\n\nmsft:region: westeurope\n\n\nmsft:container: naip\n\n\nmsft:storage_account: naipeuwest\n\n\nmsft:short_description: NAIP provides US-wide, high-resolution aerial imagery. This dataset includes NAIP images from 2010 to the present.\n\n\n\n\nSTAC Extensions\n\n\n\nhttps://stac-extensions.github.io/item-assets/v1.0.0/schema.json\n\n\nhttps://stac-extensions.github.io/table/v1.2.0/schema.json\n\n\n\n\n\nItems\nOnly the first item shown\n\n\n\n\n\nItem: hi_m_2015561_sw_05_060_20211226_20220909\n\n\n\nid: hi_m_2015561_sw_05_060_20211226_20220909\n\n\nbbox: [-155.502923, 19.997278, -155.434587, 20.065225]\n\n\ngsd: 0.6\n\n\ndatetime: 2021-12-26T16:00:00Z\n\n\nnaip:year: 2021\n\n\nproj:bbox: [238224.0, 2213136.0, 245268.0, 2220558.0]\n\n\nproj:epsg: 26905\n\n\nproviders: [{'url': 'https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/', 'name': 'USDA Farm Service Agency', 'roles': ['producer', 'licensor']}]\n\n\nnaip:state: hi\n\n\nproj:shape: [12370, 11740]\n\n\nproj:transform: [0.6, 0.0, 238224.0, 0.0, -0.6, 2220558.0, 0.0, 0.0, 1.0]\n\n\n\n\nSTAC Extensions\n\n\n\nhttps://stac-extensions.github.io/eo/v1.0.0/schema.json\n\n\nhttps://stac-extensions.github.io/projection/v1.0.0/schema.json\n\n\n\n\n\nAssets\n\n\n\n\n\nAsset: RGBIR COG tile\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/hi/2021/hi_060cm_2021/20155/61/m_2015561_sw_05_060_20211226_20220909.tif\n\n\ntype: image/tiff; application=geotiff; profile=cloud-optimized\n\n\ntitle: RGBIR COG tile\n\n\nroles: ['data']\n\n\nowner: hi_m_2015561_sw_05_060_20211226_20220909\n\n\neo:bands: [{'name': 'Red', 'common_name': 'red'}, {'name': 'Green', 'common_name': 'green'}, {'name': 'Blue', 'common_name': 'blue'}, {'name': 'NIR', 'common_name': 'nir', 'description': 'near-infrared'}]\n\n\n\n\n\n\n\n\n\n\nAsset: Thumbnail\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/hi/2021/hi_060cm_2021/20155/m_2015561_sw_05_060_20211226_20220909.200.jpg\n\n\ntype: image/jpeg\n\n\ntitle: Thumbnail\n\n\nroles: ['thumbnail']\n\n\nowner: hi_m_2015561_sw_05_060_20211226_20220909\n\n\n\n\n\n\n\n\n\n\nAsset: TileJSON with default rendering\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=hi_m_2015561_sw_05_060_20211226_20220909&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: application/json\n\n\ntitle: TileJSON with default rendering\n\n\nroles: ['tiles']\n\n\nowner: hi_m_2015561_sw_05_060_20211226_20220909\n\n\n\n\n\n\n\n\n\n\nAsset: Rendered preview\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=hi_m_2015561_sw_05_060_20211226_20220909&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: image/png\n\n\ntitle: Rendered preview\n\n\nroles: ['overview']\n\n\nowner: hi_m_2015561_sw_05_060_20211226_20220909\n\n\nrel: preview\n\n\n\n\n\n\n\nLinks\n\n\n\n\n\nLink:\n\n\n\nrel: collection\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: parent\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink: Microsoft Planetary Computer STAC API\n\n\n\nrel: root\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/\n\n\ntype: application/json\n\n\ntitle: Microsoft Planetary Computer STAC API\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: self\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/hi_m_2015561_sw_05_060_20211226_20220909\n\n\ntype: application/geo+json\n\n\n\n\n\n\n\n\n\n\nLink: Map of item\n\n\n\nrel: preview\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=hi_m_2015561_sw_05_060_20211226_20220909\n\n\ntype: text/html\n\n\ntitle: Map of item\n\n\n\n\n\n\n\n\n\n\nLinks\n\n\n\n\n\nLink:\n\n\n\nrel: items\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items\n\n\ntype: application/geo+json\n\n\n\n\n\n\n\n\n\n\nLink: Microsoft Planetary Computer STAC API\n\n\n\nrel: root\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/\n\n\ntype: application/json\n\n\ntitle: Microsoft Planetary Computer STAC API\n\n\n\n\n\n\n\n\n\n\nLink: Public Domain\n\n\n\nrel: license\n\n\nhref: https://www.fsa.usda.gov/help/policies-and-links/\n\n\ntitle: Public Domain\n\n\n\n\n\n\n\n\n\n\nLink: Human readable dataset overview and reference\n\n\n\nrel: describedby\n\n\nhref: https://planetarycomputer.microsoft.com/dataset/naip\n\n\ntype: text/html\n\n\ntitle: Human readable dataset overview and reference\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: self\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink: Microsoft Planetary Computer STAC API\n\n\n\nrel: parent\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1\n\n\ntype: application/json\n\n\ntitle: Microsoft Planetary Computer STAC API\n\n\n\n\n\n\n\nAssets\n\n\n\n\n\nAsset: NAIP thumbnail\n\n\n\nhref: https://ai4edatasetspublicassets.blob.core.windows.net/assets/pc_thumbnails/naip.png\n\n\ntype: image/png\n\n\ntitle: NAIP thumbnail\n\n\nroles: ['thumbnail']\n\n\nowner: naip\n\n\n\n\n\n\n\n\n\n\nAsset: GeoParquet STAC items\n\n\n\nhref: abfs://items/naip.parquet\n\n\ntype: application/x-parquet\n\n\ntitle: GeoParquet STAC items\n\n\ndescription: Snapshot of the collection's STAC items exported to GeoParquet format.\n\n\nroles: ['stac-items']\n\n\nowner: naip\n\n\nmsft:partition_info: {'is_partitioned': True, 'partition_frequency': 'AS'}\n\n\ntable:storage_options: {'account_name': 'pcstacitems'}"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#catalog-search",
    "href": "blog/python-trial-render/STAC-search.html#catalog-search",
    "title": "ipynb rendered as html",
    "section": "Catalog Search",
    "text": "Catalog Search\nWe can narrow the search within the catalog by specifying a time range, area of interest, and teh collection name. The simplest way to define the area of interest to look for in the catalog are:\n\na GeoJSON-type dictionary with coordinates of the bounding box\nas a list [xmin, ymin, xmax, ymax] with the coordinate values defining the four corners of the bounding box\n\nYou could also use a point, or some more complex polygon.\nIn this lesson, we will look for NAIP scenes over Santa Barbara from 2018 to 2020. We’ll use the GeoJSON method to define the area of interst:\n\n\nCode\n# temporal range of interest\ntime_range = \"2018-01-01/2023-01-01\"\n\n# NCEAS bounding box (as a GeoJSON)\nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\":[\n        [\n            [-119.70608227128903, 34.426300194372274],\n            [-119.70608227128903, 34.42041139020533],\n            [-119.6967885126002, 34.42041139020533],\n            [-119.6967885126002, 34.426300194372274],\n            [-119.70608227128903, 34.426300194372274]\n        ]\n    ]\n}\n\n# catalog search\nsearch = catalog.search(\n    collections = ['naip'], # list with collection id\n    intersects = bbox,\n    datetime = time_range\n)\nsearch\n\n\n&lt;pystac_client.item_search.ItemSearch at 0x18cf35190&gt;\n\n\nTo get the items found in the search (or check if there were any matches in the search), we use the item_collection() method:\n\n\nCode\nitems = search.item_collection()\n\n# number of items in search\nlen(items)\n\n\n2\n\n\n\n\nCode\nitems\n\n\n\n\n\n    \n    \n    \n        \n            \n                \n                    ItemCollection\n                \n            \n            \n\nItems\n\n\n\n\n\nItem: ca_m_3411935_sw_11_060_20200521\n\n\n\nid: ca_m_3411935_sw_11_060_20200521\n\n\nbbox: [-119.754272, 34.371741, -119.683292, 34.440724]\n\n\ngsd: 0.6\n\n\ndatetime: 2020-05-21T00:00:00Z\n\n\nnaip:year: 2020\n\n\nproj:bbox: [246930.0, 3806808.0, 253260.0, 3814296.0]\n\n\nproj:epsg: 26911\n\n\nnaip:state: ca\n\n\nproj:shape: [12480, 10550]\n\n\nproj:transform: [0.6, 0.0, 246930.0, 0.0, -0.6, 3814296.0, 0.0, 0.0, 1.0]\n\n\n\n\nSTAC Extensions\n\n\n\nhttps://stac-extensions.github.io/eo/v1.0.0/schema.json\n\n\nhttps://stac-extensions.github.io/projection/v1.0.0/schema.json\n\n\n\n\n\nAssets\n\n\n\n\n\nAsset: RGBIR COG tile\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-26T21%3A20%3A08Z&se=2023-12-04T21%3A20%3A08Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A20%3A07Z&ske=2023-12-04T21%3A20%3A07Z&sks=b&skv=2021-06-08&sig=0mNqylegKnvDLFT7BivwpV9%2BL1vuYmSowNmDWJ9hLaU%3D\n\n\ntype: image/tiff; application=geotiff; profile=cloud-optimized\n\n\ntitle: RGBIR COG tile\n\n\nroles: ['data']\n\n\nowner: ca_m_3411935_sw_11_060_20200521\n\n\neo:bands: [{'name': 'Red', 'common_name': 'red'}, {'name': 'Green', 'common_name': 'green'}, {'name': 'Blue', 'common_name': 'blue'}, {'name': 'NIR', 'common_name': 'nir', 'description': 'near-infrared'}]\n\n\n\n\n\n\n\n\n\n\nAsset: Thumbnail\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-26T21%3A20%3A08Z&se=2023-12-04T21%3A20%3A08Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A20%3A07Z&ske=2023-12-04T21%3A20%3A07Z&sks=b&skv=2021-06-08&sig=0mNqylegKnvDLFT7BivwpV9%2BL1vuYmSowNmDWJ9hLaU%3D\n\n\ntype: image/jpeg\n\n\ntitle: Thumbnail\n\n\nroles: ['thumbnail']\n\n\nowner: ca_m_3411935_sw_11_060_20200521\n\n\n\n\n\n\n\n\n\n\nAsset: TileJSON with default rendering\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: application/json\n\n\ntitle: TileJSON with default rendering\n\n\nroles: ['tiles']\n\n\nowner: ca_m_3411935_sw_11_060_20200521\n\n\n\n\n\n\n\n\n\n\nAsset: Rendered preview\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: image/png\n\n\ntitle: Rendered preview\n\n\nroles: ['overview']\n\n\nowner: ca_m_3411935_sw_11_060_20200521\n\n\nrel: preview\n\n\n\n\n\n\n\nLinks\n\n\n\n\n\nLink:\n\n\n\nrel: collection\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: parent\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink: Microsoft Planetary Computer STAC API\n\n\n\nrel: root\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1\n\n\ntype: application/json\n\n\ntitle: Microsoft Planetary Computer STAC API\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: self\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20200521\n\n\ntype: application/geo+json\n\n\n\n\n\n\n\n\n\n\nLink: Map of item\n\n\n\nrel: preview\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20200521\n\n\ntype: text/html\n\n\ntitle: Map of item\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem: ca_m_3411935_sw_11_060_20180724_20190209\n\n\n\nid: ca_m_3411935_sw_11_060_20180724_20190209\n\n\nbbox: [-119.753736, 34.372185, -119.683827, 34.44028]\n\n\ngsd: 0.6\n\n\ndatetime: 2018-07-24T00:00:00Z\n\n\nnaip:year: 2018\n\n\nproj:bbox: [246978.0, 3806856.0, 253212.0, 3814248.0]\n\n\nproj:epsg: 26911\n\n\nnaip:state: ca\n\n\nproj:shape: [12320, 10390]\n\n\nproj:transform: [0.6, 0.0, 246978.0, 0.0, -0.6, 3814248.0, 0.0, 0.0, 1.0]\n\n\n\n\nSTAC Extensions\n\n\n\nhttps://stac-extensions.github.io/eo/v1.0.0/schema.json\n\n\nhttps://stac-extensions.github.io/projection/v1.0.0/schema.json\n\n\n\n\n\nAssets\n\n\n\n\n\nAsset: RGBIR COG tile\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.tif?st=2023-11-26T21%3A20%3A08Z&se=2023-12-04T21%3A20%3A08Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A20%3A07Z&ske=2023-12-04T21%3A20%3A07Z&sks=b&skv=2021-06-08&sig=0mNqylegKnvDLFT7BivwpV9%2BL1vuYmSowNmDWJ9hLaU%3D\n\n\ntype: image/tiff; application=geotiff; profile=cloud-optimized\n\n\ntitle: RGBIR COG tile\n\n\nroles: ['data']\n\n\nowner: ca_m_3411935_sw_11_060_20180724_20190209\n\n\neo:bands: [{'name': 'Red', 'common_name': 'red'}, {'name': 'Green', 'common_name': 'green'}, {'name': 'Blue', 'common_name': 'blue'}, {'name': 'NIR', 'common_name': 'nir', 'description': 'near-infrared'}]\n\n\n\n\n\n\n\n\n\n\nAsset: FGDC Metdata\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_fgdc_2018/34119/m_3411935_sw_11_060_20180724.txt?st=2023-11-26T21%3A20%3A08Z&se=2023-12-04T21%3A20%3A08Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A20%3A07Z&ske=2023-12-04T21%3A20%3A07Z&sks=b&skv=2021-06-08&sig=0mNqylegKnvDLFT7BivwpV9%2BL1vuYmSowNmDWJ9hLaU%3D\n\n\ntype: text/plain\n\n\ntitle: FGDC Metdata\n\n\nroles: ['metadata']\n\n\nowner: ca_m_3411935_sw_11_060_20180724_20190209\n\n\n\n\n\n\n\n\n\n\nAsset: Thumbnail\n\n\n\nhref: https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.200.jpg?st=2023-11-26T21%3A20%3A08Z&se=2023-12-04T21%3A20%3A08Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A20%3A07Z&ske=2023-12-04T21%3A20%3A07Z&sks=b&skv=2021-06-08&sig=0mNqylegKnvDLFT7BivwpV9%2BL1vuYmSowNmDWJ9hLaU%3D\n\n\ntype: image/jpeg\n\n\ntitle: Thumbnail\n\n\nroles: ['thumbnail']\n\n\nowner: ca_m_3411935_sw_11_060_20180724_20190209\n\n\n\n\n\n\n\n\n\n\nAsset: TileJSON with default rendering\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: application/json\n\n\ntitle: TileJSON with default rendering\n\n\nroles: ['tiles']\n\n\nowner: ca_m_3411935_sw_11_060_20180724_20190209\n\n\n\n\n\n\n\n\n\n\nAsset: Rendered preview\n\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\n\n\ntype: image/png\n\n\ntitle: Rendered preview\n\n\nroles: ['overview']\n\n\nowner: ca_m_3411935_sw_11_060_20180724_20190209\n\n\nrel: preview\n\n\n\n\n\n\n\nLinks\n\n\n\n\n\nLink:\n\n\n\nrel: collection\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: parent\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\n\n\ntype: application/json\n\n\n\n\n\n\n\n\n\n\nLink: Microsoft Planetary Computer STAC API\n\n\n\nrel: root\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1\n\n\ntype: application/json\n\n\ntitle: Microsoft Planetary Computer STAC API\n\n\n\n\n\n\n\n\n\n\nLink:\n\n\n\nrel: self\n\n\nhref: https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20180724_20190209\n\n\ntype: application/geo+json\n\n\n\n\n\n\n\n\n\n\nLink: Map of item\n\n\n\nrel: preview\n\n\nhref: https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209\n\n\ntype: text/html\n\n\ntitle: Map of item"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#item",
    "href": "blog/python-trial-render/STAC-search.html#item",
    "title": "ipynb rendered as html",
    "section": "Item",
    "text": "Item\nLet’s get the first item in the search\n\n\nCode\n# get first item in the catalog search\nitem = items[0]\ntype(item)\n\n\npystac.item.Item\n\n\nRemember the STAC item is the core object in the catalog.\nThe item does not conain the data itself, but metadata about it and links to access the actual data (assets). Some of the metadata:\n\n\nCode\nprint('id', item.id)\nitem.properties\n\n\nid ca_m_3411935_sw_11_060_20200521\n\n\n{'gsd': 0.6,\n 'datetime': '2020-05-21T00:00:00Z',\n 'naip:year': '2020',\n 'proj:bbox': [246930.0, 3806808.0, 253260.0, 3814296.0],\n 'proj:epsg': 26911,\n 'naip:state': 'ca',\n 'proj:shape': [12480, 10550],\n 'proj:transform': [0.6, 0.0, 246930.0, 0.0, -0.6, 3814296.0, 0.0, 0.0, 1.0]}\n\n\nJust as the item properties, the item assets are given in a dictionary with each value being a pystac.asset. Let’s check the assests in the item\n\n\nCode\nitem.assets\n\n\n{'image': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-28T21%3A44%3A48Z&se=2023-11-29T22%3A29%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-29T14%3A07%3A46Z&ske=2023-12-06T14%3A07%3A46Z&sks=b&skv=2021-06-08&sig=CaAM7OOGQLQa69ZmwbgneMLHfR6l3h1%2BLs6o/pTr4ew%3D&gt;,\n 'thumbnail': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-28T21%3A44%3A48Z&se=2023-11-29T22%3A29%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-29T14%3A07%3A46Z&ske=2023-12-06T14%3A07%3A46Z&sks=b&skv=2021-06-08&sig=CaAM7OOGQLQa69ZmwbgneMLHfR6l3h1%2BLs6o/pTr4ew%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;}\n\n\n\n\nCode\nfor key in item.assets.keys():\n    print(key, '--', item.assets[key].title)\n\n\nimage -- RGBIR COG tile\nthumbnail -- Thumbnail\ntilejson -- TileJSON with default rendering\nrendered_preview -- Rendered preview\n\n\nNotice each asset has an href, which is a link to the asset object (i.e. the data). For example, we can use the URL for the rendered preview asset to plot itL:\n\n\nCode\nImage(url = item.assets['rendered_preview'].href, width = 500)"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#load-data",
    "href": "blog/python-trial-render/STAC-search.html#load-data",
    "title": "ipynb rendered as html",
    "section": "Load data",
    "text": "Load data\nThe raster data in our current item is in the image asset. Again, we access this data via its url. This time we open it using rioxr.open_rasterio() directly:\n\n\nCode\nsb = rioxr.open_rasterio(item.assets['image'].href)\nsb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 4, y: 12480, x: 10550)&gt;\n[526656000 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3 4\n  * x            (x) float64 2.469e+05 2.469e+05 ... 2.533e+05 2.533e+05\n  * y            (y) float64 3.814e+06 3.814e+06 ... 3.807e+06 3.807e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:             Area\n    TIFFTAG_IMAGEDESCRIPTION:  OrthoVista\n    TIFFTAG_RESOLUTIONUNIT:    1 (unitless)\n    TIFFTAG_SOFTWARE:          Trimble Germany GmbH\n    TIFFTAG_XRESOLUTION:       1\n    TIFFTAG_YRESOLUTION:       1\n    _FillValue:                0\n    scale_factor:              1.0\n    add_offset:                0.0xarray.DataArrayband: 4y: 12480x: 10550...[526656000 values with dtype=uint8]Coordinates: (4)band(band)int641 2 3 4array([1, 2, 3, 4])x(x)float642.469e+05 2.469e+05 ... 2.533e+05array([246930.3, 246930.9, 246931.5, ..., 253258.5, 253259.1, 253259.7])y(y)float643.814e+06 3.814e+06 ... 3.807e+06array([3814295.7, 3814295.1, 3814294.5, ..., 3806809.5, 3806808.9, 3806808.3])spatial_ref()int640crs_wkt :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314140356inverse_flattening :298.257222101reference_ellipsoid_name :GRS 1980longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :NAD83horizontal_datum_name :North American Datum 1983projected_crs_name :NAD83 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]GeoTransform :246930.0 0.6 0.0 3814296.0 0.0 -0.6array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1, 2, 3, 4], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([          246930.3,           246930.9,           246931.5,\n       246932.09999999998, 246932.69999999998,           246933.3,\n                 246933.9,           246934.5, 246935.09999999998,\n       246935.69999999998,\n       ...\n                 253254.3,           253254.9,           253255.5,\n       253256.09999999998, 253256.69999999998,           253257.3,\n                 253257.9,           253258.5, 253259.09999999998,\n       253259.69999999998],\n      dtype='float64', name='x', length=10550))yPandasIndexPandasIndex(Index([         3814295.7,          3814295.1,          3814294.5,\n       3814293.9000000004, 3814293.3000000003,          3814292.7,\n                3814292.1,          3814291.5, 3814290.9000000004,\n       3814290.3000000003,\n       ...\n                3806813.7,          3806813.1,          3806812.5,\n       3806811.9000000004, 3806811.3000000003,          3806810.7,\n                3806810.1,          3806809.5, 3806808.9000000004,\n       3806808.3000000003],\n      dtype='float64', name='y', length=12480))Attributes: (9)AREA_OR_POINT :AreaTIFFTAG_IMAGEDESCRIPTION :OrthoVistaTIFFTAG_RESOLUTIONUNIT :1 (unitless)TIFFTAG_SOFTWARE :Trimble Germany GmbHTIFFTAG_XRESOLUTION :1TIFFTAG_YRESOLUTION :1_FillValue :0scale_factor :1.0add_offset :0.0\n\n\n\n\nCode\n# plot raster with correct ratio\nsize = 6 # heigh in inches of plot\naspect = sb.rio.width/sb.rio.height\nsb.sel(band = [1,2,3]).plot.imshow(size = size, aspect = aspect)\n\n\n&lt;matplotlib.image.AxesImage at 0x7a01ee027350&gt;"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#exercise",
    "href": "blog/python-trial-render/STAC-search.html#exercise",
    "title": "ipynb rendered as html",
    "section": "Exercise",
    "text": "Exercise\nthe ‘cop-dem-glo-90’ collection contains teh Cpernicus DEM at 90m resolution ( the one we used for the Grand Canyon).\n\nUse the bbox for Santa Barbara to look for items in this collection.\nGet the first item in the search and check its assets.\nPlot the item’s rendered preview asset\nOpen the item’s data using rioxarray\n\n\n\nCode\n# 1 Use the bbox for Santa Barbara to look for items in this collection.\ncop_items = catalog.search(\n    collections = ['cop-dem-glo-90'], # list with collection id\n    intersects = bbox).item_collection()\nlen(cop_items)\n\n\n1\n\n\n\n\nCode\n# 2. Get the first item in the search and check its assets.\nitem1 = cop_items[0]\nitem1.assets\n\n\n{'data': &lt;Asset href=https://elevationeuwest.blob.core.windows.net/copernicus-dem/COP90_hh/Copernicus_DSM_COG_30_N34_00_W120_00_DEM.tif?st=2023-11-26T21%3A39%3A35Z&se=2023-12-04T21%3A39%3A35Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-27T21%3A39%3A34Z&ske=2023-12-04T21%3A39%3A34Z&sks=b&skv=2021-06-08&sig=/tKu1hI771wtKgMX1/17nqN8sBlVyVCd0TS52hCXx3o%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;}\n\n\n\n\nCode\n# 3. Plot the item's rendered preview asset\nImage(url = item1.assets['rendered_preview'].href, width = 500)\n\n\n\n\n\n\n\nCode\n# 4. Open the item's data using rioxarray\nsb_dem = rioxr.open_rasterio(item1.assets['data'].href)\nsb_dem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 1, y: 1200, x: 1200)&gt;\n[1440000 values with dtype=float32]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 -120.0 -120.0 -120.0 ... -119.0 -119.0 -119.0\n  * y            (y) float64 35.0 35.0 35.0 35.0 35.0 ... 34.0 34.0 34.0 34.0\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Point\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayband: 1y: 1200x: 1200...[1440000 values with dtype=float32]Coordinates: (4)band(band)int641array([1])x(x)float64-120.0 -120.0 ... -119.0 -119.0array([-120.      , -119.999167, -119.998333, ..., -119.0025  , -119.001667,\n       -119.000833])y(y)float6435.0 35.0 35.0 ... 34.0 34.0 34.0array([35.      , 34.999167, 34.998333, ..., 34.0025  , 34.001667, 34.000833])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-120.00041666666667 0.0008333333333333334 0.0 35.000416666666666 0.0 -0.0008333333333333334array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([             -120.0, -119.99916666666667, -119.99833333333333,\n                 -119.9975, -119.99666666666667, -119.99583333333334,\n                  -119.995, -119.99416666666667, -119.99333333333334,\n                 -119.9925,\n       ...\n       -119.00833333333334,           -119.0075, -119.00666666666666,\n       -119.00583333333333,            -119.005, -119.00416666666666,\n       -119.00333333333333,           -119.0025, -119.00166666666667,\n       -119.00083333333333],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([              35.0,  34.99916666666667, 34.998333333333335,\n                  34.9975,  34.99666666666667,  34.99583333333333,\n                   34.995, 34.994166666666665,  34.99333333333333,\n                  34.9925,\n       ...\n        34.00833333333333,            34.0075,  34.00666666666667,\n       34.005833333333335,             34.005,  34.00416666666667,\n        34.00333333333333,            34.0025, 34.001666666666665,\n        34.00083333333333],\n      dtype='float64', name='y', length=1200))Attributes: (3)AREA_OR_POINT :Pointscale_factor :1.0add_offset :0.0"
  },
  {
    "objectID": "blog/python-trial-render/STAC-search.html#access",
    "href": "blog/python-trial-render/STAC-search.html#access",
    "title": "ipynb rendered as html",
    "section": "Access",
    "text": "Access\nWE use the Client function from the pystac_client pacakge to acess the catalog:\n\n\nCode\n# access catalog\ncatalog = Client.open(\"https://planetarycomputer.microsoft.com/api/stac/v1\",\n                      modifier = planetary_computer.sign_inplace)\n\n\nThe modifier parameter is needed to access the data in the MPC catalog."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Amanda Herbst\nLink to GitHub repository: https://github.com/amandaherbst/eds220-thomas-fire\n\n\nThe Thomas fire was a huge wildfire that burned a large part of Santa Barbara and Ventura counties during December 2017, and was the largest recorded California wildfire at the time. The following analysis gives insight on the drastic impacts it had on the local air quality, as well as the land area it burned.\n\n\n\n\nFetch vector data from an online repository\nTime series analysis\nVisualize raster data\nFalse color imagery\n\n\n\n\n(1) Air Quality Index (AQI)\nOutdoor daily air quality measurements in Santa Barbara County in 2017 and 2018 were retrieved from the US Environmental Protection Agency.\n(2) Landsat raster data\nA simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite. The data was accessed and pre-processed in the Microsoft Planetary Computer to remove data outside land and coarsen the spatial resolution (Landsat Collection in MPC). Data should be used for visualization purposes only.\n(3) Fire Perimeters\nA shapefile of fire perimeters in California during 2017, from the CA state geoportal.\n\n\n\n\nUS EPA Daily AQI Data Accessed Oct 25, 2023\nLandsat 8 satellite surface reflectance data, from MPC Landsat collection Accessed Nov 28, 2023\n2017 CA fire perimeter shapefile Accessed November 28, 2023\n\n\n\n\n\n\nCode\n# import libraries\nimport os\nimport pandas as pd\nimport xarray as xr\nimport numpy as np\n\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n\n\n\n\n\n\nCode\n# read in 2017 and 2018 air quality data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\n\n# import landsat raster data by calling a filepath\nlandsat = rioxr.open_rasterio(os.path.join(os.getcwd(),'data', 'landsat8-2018-01-26-sb-simplified.nc'))\n\n# import ca fire perimeters\nca_fire = gpd.read_file('data/California_Fire_Perimeters_2017/California_Fire_Perimeters_2017.shp')\n\n\n\n\n\nSanta Barbara county is located on the coast of Southern California (coordinates: 34.6099° N, 120.0665° W) and has a Mediterranean biome that has recently experienced prolonged droughts and is prone to wildfires.\n\n\n\nTake a look at the initial data:\n\n\nCode\n# look at aqi 2017 dataframe\naqi_17.head()\n\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2017-01-01\n21\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2017-01-04\n22\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2017-01-10\n19\nGood\nPM2.5\n01-003-0010\n1\n\n\n3\nAlabama\nBaldwin\n1\n3\n2017-01-13\n30\nGood\nPM2.5\n01-003-0010\n1\n\n\n4\nAlabama\nBaldwin\n1\n3\n2017-01-16\n16\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n\nCode\n# look at aqi 2018 dataframe\naqi_18.head()\n\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2018-01-02\n32\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2018-01-05\n34\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2018-01-08\n15\nGood\nPM2.5\n01-003-0010\n1\n\n\n3\nAlabama\nBaldwin\n1\n3\n2018-01-11\n19\nGood\nPM2.5\n01-003-0010\n1\n\n\n4\nAlabama\nBaldwin\n1\n3\n2018-01-14\n25\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n\nCode\n# look at raster data\nlandsat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:      (y: 731, x: 870, band: 1)\nCoordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * band         (band) int64 1\n    spatial_ref  int64 0\nData variables:\n    red          (band, y, x) float64 ...\n    green        (band, y, x) float64 ...\n    blue         (band, y, x) float64 ...\n    nir08        (band, y, x) float64 ...\n    swir22       (band, y, x) float64 ...xarray.DatasetDimensions:y: 731x: 870band: 1Coordinates: (4)y(y)float643.952e+06 3.952e+06 ... 3.755e+06axis :Ycrs :EPSG:32611long_name :y coordinate of projectionresolution :-30standard_name :projection_y_coordinateunits :metre_FillValue :nanarray([3952395., 3952125., 3951855., ..., 3755835., 3755565., 3755295.])x(x)float641.213e+05 1.216e+05 ... 3.559e+05axis :Xcrs :EPSG:32611long_name :x coordinate of projectionresolution :30standard_name :projection_x_coordinateunits :metre_FillValue :nanarray([121305., 121575., 121845., ..., 355395., 355665., 355935.])band(band)int641array([1])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :121170.0 270.0 0.0 3952530.0 0.0 -270.0array(0)Data variables: (5)red(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]green(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]blue(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]nir08(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]swir22(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]Attributes: (0)\n\n\n\n\nCode\n# look at ca_fire head\nca_fire.head()\n\n\n\n\n\n\n\n\n\nindex\nOBJECTID\nYEAR_\nSTATE\nAGENCY\nUNIT_ID\nFIRE_NAME\nINC_NUM\nALARM_DATE\nCONT_DATE\n...\nGIS_ACRES\nCOMMENTS\nCOMPLEX_NA\nCOMPLEX_IN\nIRWINID\nFIRE_NUM\nDECADES\nSHAPE_Leng\nSHAPE_Area\ngeometry\n\n\n\n\n0\n19836\n41429\n2017\nCA\nCCO\nVNC\nBROOK\n00042450\n2017-05-23\n2017-05-24\n...\n10.043819\nper walked track\nNone\nNone\nNone\nNone\n2010\n1246.055781\n59473.666651\nPOLYGON ((-13229812.974 4046876.486, -13229786...\n\n\n1\n19837\n41430\n2017\nCA\nCCO\nVNC\nPACIFIC\n00075307\n2017-09-09\n2017-09-09\n...\n1.190109\nFinal Walked track. Small spot to the north east\nNone\nNone\nNone\nNone\n2010\n561.418202\n7081.369481\nPOLYGON ((-13286872.985 4074523.355, -13286895...\n\n\n2\n19838\n41431\n2017\nCA\nCCO\nVNC\nGRADE\n00054660\n2017-07-04\n2017-07-05\n...\n47.194027\nNone\nNone\nNone\nNone\nNone\n2010\n2587.259697\n279911.825212\nPOLYGON ((-13244637.580 4056332.530, -13244620...\n\n\n3\n19839\n41432\n2017\nCA\nCCO\nVNC\nPACIFICA\n00051791\n2017-06-24\n2017-06-24\n...\n1.158548\nGPS track\nNone\nNone\nNone\nNone\n2010\n501.178102\n6859.664843\nPOLYGON ((-13229521.754 4046254.111, -13229510...\n\n\n4\n19840\n41433\n2017\nCA\nCCO\nVNC\nMONTVIEW\n00040196\n2017-05-15\n2017-05-15\n...\n2.893327\nRough per description. waiting for walked GPS...\nNone\nNone\nNone\nNone\n2010\n484.388887\n17133.006159\nPOLYGON ((-13229663.036 4046858.853, -13229667...\n\n\n\n\n5 rows × 23 columns\n\n\n\nAdditional preliminary exploration:\n\n\nCode\n# check dimensions of air quality data \nprint(\"AQI 2017 dims: \", aqi_17.shape)\nprint(\"AQI 2018 dims: \", aqi_18.shape)\n\n\nAQI 2017 dims:  (326801, 10)\nAQI 2018 dims:  (327537, 10)\n\n\n\n\nCode\n# check crs for raster and shapefile data\nprint('landsat CRS:', landsat.rio.crs)\nprint('CA Fire Perimeter CRS:', ca_fire.crs)\n\n\nlandsat CRS: EPSG:32611\nCA Fire Perimeter CRS: epsg:3857\n\n\n\n\nCode\n# plot ca fires\nca_fire.plot()\n\n\n&lt;AxesSubplot:&gt;\n\n\n\n\n\n\n\nCode\n# plot a band in landsat\nlandsat['swir22'].plot()\n\n\n&lt;matplotlib.collections.QuadMesh at 0x7fe8d22892e0&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# join the aqi datasets together\naqi = pd.concat([aqi_17, aqi_18])\n\n# check dimensions to make verify concatenation\naqi.shape\n\n\n(654338, 10)\n\n\n\n\nCode\n# tidy aqi column names\naqi.columns = aqi.columns.str.lower().str.replace(' ','_')\n# filter by county name, and then only keep necessary columns\naqi_sb = aqi[aqi.county_name == 'Santa Barbara'].loc[:,'date':'number_of_sites_reporting']\n# verify selected columns and tidy format\naqi_sb.columns\n\n\nIndex(['date', 'aqi', 'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object')\n\n\n\n\nCode\n# convert date column from string to timestamps\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n\n# check column data types to verify datetime conversion\naqi_sb.dtypes\n\n\ndate                         datetime64[ns]\naqi                                   int64\ncategory                             object\ndefining_parameter                   object\ndefining_site                        object\nnumber_of_sites_reporting             int64\ndtype: object\n\n\n\n\nCode\n# set the date column to be the index\naqi_sb = aqi_sb.set_index('date')\n# check dtype of index to verify\ntype(aqi_sb.index)\n\n\npandas.core.indexes.datetimes.DatetimeIndex\n\n\n\n\nCode\n# create new column to store the rolling 5 day averages of AQI\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()\n\n\n\n\n\n\n\nCode\n# drop extra dimension \nlandsat = landsat.squeeze().drop('band')\n# verify only x and y dimension and coordinates\nprint(landsat.dims, landsat.coords)\n\n\nFrozen({'y': 731, 'x': 870}) Coordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n    spatial_ref  int64 0\n\n\n\n\nCode\n# update ca_fire column names to lowercase\nca_fire.columns = ca_fire.columns.str.lower()\n\n\n\n\nCode\n# Reproject shapefile to raster CRS for plotting\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n# verify reprojection\nca_fire.crs == landsat.rio.crs\n\n\nTrue\n\n\n\n\nCode\n# select thomas fire from ca fire perimeters for easier plotting\nthomas = ca_fire[ca_fire.fire_name == \"THOMAS\"]\n# verify only thomas fire selected\nthomas.fire_name.unique()\n\n\narray(['THOMAS'], dtype=object)\n\n\n\n\n\n\n\n\n\n\nCode\n# plot daily AQI and 5-day average with updated labels, title, and colors\naqi_sb.plot(y = ['aqi', 'five_day_average'],\n            xlabel = 'Date',\n            ylabel = 'AQI',\n            color = {'aqi':'lightgreen',\n                    'five_day_average':'darkgreen'},\n            title = 'Air Quality Index in Santa Barbara County (2017-2018)')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nCode\n# map false color image with thomas fire perimeter\nfig, ax = plt.subplots()\n\n# plot false color image\nlandsat[['swir22','nir08','red']].to_array().plot.imshow(robust = True,\n                                                        ax = ax)\n# plot thomas fire perimeter in red\nthomas.boundary.plot(ax = ax,\n            color = \"red\",\n                    linewidth = 0.8)\n# create thomas fire patch for legend\nthomas_patch = mlines.Line2D([],[],\n                             color = \"red\",\n                             linestyle = \"-\",\n                             label = \"Thomas Fire Perimeter\")\n\n# add legend to label thomas fire perimeter\nax.legend(handles = [thomas_patch], \n          frameon = True,\n         loc = 'upper right')\n\n# add map title\nplt.title('Santa Barbara Thomas Fire (2017)')\n\n# turn off axes\nax.axis('off')\n\nplt.show()"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#import-libraries-and-functions",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#import-libraries-and-functions",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Code\n# import libraries\nimport os\nimport pandas as pd\nimport xarray as xr\nimport numpy as np\n\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#import-data",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#import-data",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Code\n# read in 2017 and 2018 air quality data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\n\n# import landsat raster data by calling a filepath\nlandsat = rioxr.open_rasterio(os.path.join(os.getcwd(),'data', 'landsat8-2018-01-26-sb-simplified.nc'))\n\n# import ca fire perimeters\nca_fire = gpd.read_file('data/California_Fire_Perimeters_2017/California_Fire_Perimeters_2017.shp')"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#geographical-context-of-data",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#geographical-context-of-data",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Santa Barbara county is located on the coast of Southern California (coordinates: 34.6099° N, 120.0665° W) and has a Mediterranean biome that has recently experienced prolonged droughts and is prone to wildfires."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#data-exploration",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#data-exploration",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Take a look at the initial data:\n\n\nCode\n# look at aqi 2017 dataframe\naqi_17.head()\n\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2017-01-01\n21\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2017-01-04\n22\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2017-01-10\n19\nGood\nPM2.5\n01-003-0010\n1\n\n\n3\nAlabama\nBaldwin\n1\n3\n2017-01-13\n30\nGood\nPM2.5\n01-003-0010\n1\n\n\n4\nAlabama\nBaldwin\n1\n3\n2017-01-16\n16\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n\nCode\n# look at aqi 2018 dataframe\naqi_18.head()\n\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2018-01-02\n32\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2018-01-05\n34\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2018-01-08\n15\nGood\nPM2.5\n01-003-0010\n1\n\n\n3\nAlabama\nBaldwin\n1\n3\n2018-01-11\n19\nGood\nPM2.5\n01-003-0010\n1\n\n\n4\nAlabama\nBaldwin\n1\n3\n2018-01-14\n25\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n\nCode\n# look at raster data\nlandsat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:      (y: 731, x: 870, band: 1)\nCoordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * band         (band) int64 1\n    spatial_ref  int64 0\nData variables:\n    red          (band, y, x) float64 ...\n    green        (band, y, x) float64 ...\n    blue         (band, y, x) float64 ...\n    nir08        (band, y, x) float64 ...\n    swir22       (band, y, x) float64 ...xarray.DatasetDimensions:y: 731x: 870band: 1Coordinates: (4)y(y)float643.952e+06 3.952e+06 ... 3.755e+06axis :Ycrs :EPSG:32611long_name :y coordinate of projectionresolution :-30standard_name :projection_y_coordinateunits :metre_FillValue :nanarray([3952395., 3952125., 3951855., ..., 3755835., 3755565., 3755295.])x(x)float641.213e+05 1.216e+05 ... 3.559e+05axis :Xcrs :EPSG:32611long_name :x coordinate of projectionresolution :30standard_name :projection_x_coordinateunits :metre_FillValue :nanarray([121305., 121575., 121845., ..., 355395., 355665., 355935.])band(band)int641array([1])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :121170.0 270.0 0.0 3952530.0 0.0 -270.0array(0)Data variables: (5)red(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]green(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]blue(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]nir08(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]swir22(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]Attributes: (0)\n\n\n\n\nCode\n# look at ca_fire head\nca_fire.head()\n\n\n\n\n\n\n\n\n\nindex\nOBJECTID\nYEAR_\nSTATE\nAGENCY\nUNIT_ID\nFIRE_NAME\nINC_NUM\nALARM_DATE\nCONT_DATE\n...\nGIS_ACRES\nCOMMENTS\nCOMPLEX_NA\nCOMPLEX_IN\nIRWINID\nFIRE_NUM\nDECADES\nSHAPE_Leng\nSHAPE_Area\ngeometry\n\n\n\n\n0\n19836\n41429\n2017\nCA\nCCO\nVNC\nBROOK\n00042450\n2017-05-23\n2017-05-24\n...\n10.043819\nper walked track\nNone\nNone\nNone\nNone\n2010\n1246.055781\n59473.666651\nPOLYGON ((-13229812.974 4046876.486, -13229786...\n\n\n1\n19837\n41430\n2017\nCA\nCCO\nVNC\nPACIFIC\n00075307\n2017-09-09\n2017-09-09\n...\n1.190109\nFinal Walked track. Small spot to the north east\nNone\nNone\nNone\nNone\n2010\n561.418202\n7081.369481\nPOLYGON ((-13286872.985 4074523.355, -13286895...\n\n\n2\n19838\n41431\n2017\nCA\nCCO\nVNC\nGRADE\n00054660\n2017-07-04\n2017-07-05\n...\n47.194027\nNone\nNone\nNone\nNone\nNone\n2010\n2587.259697\n279911.825212\nPOLYGON ((-13244637.580 4056332.530, -13244620...\n\n\n3\n19839\n41432\n2017\nCA\nCCO\nVNC\nPACIFICA\n00051791\n2017-06-24\n2017-06-24\n...\n1.158548\nGPS track\nNone\nNone\nNone\nNone\n2010\n501.178102\n6859.664843\nPOLYGON ((-13229521.754 4046254.111, -13229510...\n\n\n4\n19840\n41433\n2017\nCA\nCCO\nVNC\nMONTVIEW\n00040196\n2017-05-15\n2017-05-15\n...\n2.893327\nRough per description. waiting for walked GPS...\nNone\nNone\nNone\nNone\n2010\n484.388887\n17133.006159\nPOLYGON ((-13229663.036 4046858.853, -13229667...\n\n\n\n\n5 rows × 23 columns\n\n\n\nAdditional preliminary exploration:\n\n\nCode\n# check dimensions of air quality data \nprint(\"AQI 2017 dims: \", aqi_17.shape)\nprint(\"AQI 2018 dims: \", aqi_18.shape)\n\n\nAQI 2017 dims:  (326801, 10)\nAQI 2018 dims:  (327537, 10)\n\n\n\n\nCode\n# check crs for raster and shapefile data\nprint('landsat CRS:', landsat.rio.crs)\nprint('CA Fire Perimeter CRS:', ca_fire.crs)\n\n\nlandsat CRS: EPSG:32611\nCA Fire Perimeter CRS: epsg:3857\n\n\n\n\nCode\n# plot ca fires\nca_fire.plot()\n\n\n&lt;AxesSubplot:&gt;\n\n\n\n\n\n\n\nCode\n# plot a band in landsat\nlandsat['swir22'].plot()\n\n\n&lt;matplotlib.collections.QuadMesh at 0x7fe8d22892e0&gt;"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#analysis",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#analysis",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Code\n# join the aqi datasets together\naqi = pd.concat([aqi_17, aqi_18])\n\n# check dimensions to make verify concatenation\naqi.shape\n\n\n(654338, 10)\n\n\n\n\nCode\n# tidy aqi column names\naqi.columns = aqi.columns.str.lower().str.replace(' ','_')\n# filter by county name, and then only keep necessary columns\naqi_sb = aqi[aqi.county_name == 'Santa Barbara'].loc[:,'date':'number_of_sites_reporting']\n# verify selected columns and tidy format\naqi_sb.columns\n\n\nIndex(['date', 'aqi', 'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object')\n\n\n\n\nCode\n# convert date column from string to timestamps\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n\n# check column data types to verify datetime conversion\naqi_sb.dtypes\n\n\ndate                         datetime64[ns]\naqi                                   int64\ncategory                             object\ndefining_parameter                   object\ndefining_site                        object\nnumber_of_sites_reporting             int64\ndtype: object\n\n\n\n\nCode\n# set the date column to be the index\naqi_sb = aqi_sb.set_index('date')\n# check dtype of index to verify\ntype(aqi_sb.index)\n\n\npandas.core.indexes.datetimes.DatetimeIndex\n\n\n\n\nCode\n# create new column to store the rolling 5 day averages of AQI\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()\n\n\n\n\n\n\n\nCode\n# drop extra dimension \nlandsat = landsat.squeeze().drop('band')\n# verify only x and y dimension and coordinates\nprint(landsat.dims, landsat.coords)\n\n\nFrozen({'y': 731, 'x': 870}) Coordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n    spatial_ref  int64 0\n\n\n\n\nCode\n# update ca_fire column names to lowercase\nca_fire.columns = ca_fire.columns.str.lower()\n\n\n\n\nCode\n# Reproject shapefile to raster CRS for plotting\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n# verify reprojection\nca_fire.crs == landsat.rio.crs\n\n\nTrue\n\n\n\n\nCode\n# select thomas fire from ca fire perimeters for easier plotting\nthomas = ca_fire[ca_fire.fire_name == \"THOMAS\"]\n# verify only thomas fire selected\nthomas.fire_name.unique()\n\n\narray(['THOMAS'], dtype=object)"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#final-output",
    "href": "blog/2023-12-23-eds220-thomas-fire/hwk4-task3-thomas-fire.html#final-output",
    "title": "ipynb rendered as html",
    "section": "",
    "text": "Code\n# plot daily AQI and 5-day average with updated labels, title, and colors\naqi_sb.plot(y = ['aqi', 'five_day_average'],\n            xlabel = 'Date',\n            ylabel = 'AQI',\n            color = {'aqi':'lightgreen',\n                    'five_day_average':'darkgreen'},\n            title = 'Air Quality Index in Santa Barbara County (2017-2018)')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nCode\n# map false color image with thomas fire perimeter\nfig, ax = plt.subplots()\n\n# plot false color image\nlandsat[['swir22','nir08','red']].to_array().plot.imshow(robust = True,\n                                                        ax = ax)\n# plot thomas fire perimeter in red\nthomas.boundary.plot(ax = ax,\n            color = \"red\",\n                    linewidth = 0.8)\n# create thomas fire patch for legend\nthomas_patch = mlines.Line2D([],[],\n                             color = \"red\",\n                             linestyle = \"-\",\n                             label = \"Thomas Fire Perimeter\")\n\n# add legend to label thomas fire perimeter\nax.legend(handles = [thomas_patch], \n          frameon = True,\n         loc = 'upper right')\n\n# add map title\nplt.title('Santa Barbara Thomas Fire (2017)')\n\n# turn off axes\nax.axis('off')\n\nplt.show()"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "Amanda Herbst\nLink to GitHub repository: https://github.com/amandaherbst/eds220-thomas-fire\n\n\n\nThomas fire\n\n\n\n\n\n\nThe Thomas fire was a huge wildfire that burned a large part of Santa Barbara and Ventura counties during December 2017, and was the largest recorded California wildfire at the time. Residents of both counties and beyond were greatly affected by the destruction of their homes, widespread evacuations, and schools shutting down. The following analysis gives insight on the drastic impacts the Thomas fire had on the local air quality, as well as the land area it burned.\n\n\n\n\nFetch vector data from an online repository\nTime series analysis\nVisualize raster data\nFalse color imagery\nPlotting with Matplotlib.pyplot\n\n\n\n\n(1) Air Quality Index (AQI)\nOutdoor daily air quality measurements in US counties can be retrieved from the US Environmental Protection Agency (EPA). It can then be filtered to a county (or counties) of interest–in this case, Santa Barbara county.\n(2) Landsat raster data\nThe raster data was accessed and preprocessed in the Microsoft Planetary Computer from their Landsat Collection 2 Level-2 dataset. It contains a simplified collection of red, green, blue, near-infrared, and shortwave infrared bands that were collected by the Landsat 8 satellite.\n(3) CA Fire Perimeters\nSince the majority of the Thomas Fire burned during December 2017, I accessed the shapefiles of fire perimeters in California during 2017, provided by CAL FIRE.\n\n\n\nUS Environmental Protection Agency (2023). Daily AQI by County [Data File]. Available from https://aqs.epa.gov/aqsweb/airdata/download_files.html#AQI. Accessed October 25, 2023\nMicrosoft Planetary Computer. Landsat Collection 2 Level-2 [Dataset]. Available from https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2. Accessed November 28, 2023\nCalifornia Department of Forestry and Fire Protection (2023). California Fire Perimeters (all) [Data File]. Available from https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about. Accessed November 28, 2023\n\n\n\n\n\n\nCode\nimport os\nimport pandas as pd\n\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n\n\n\n\nThe air quality data can be accessed via URL. The Landsat raster data and California fire perimeters were downloaded and stored in a local folder which is accessed directly.\n\n\nCode\n# 2017 and 2018 air quality data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\n\n# import landsat raster data by calling a filepath with os\nlandsat = rioxr.open_rasterio(os.path.join(os.getcwd(),'data', 'landsat8-2018-01-26-sb-simplified.nc'))\n\n# ca fire perimeters\nca_fire = gpd.read_file('data/California_Fire_Perimeters_2017/California_Fire_Perimeters_2017.shp')\n\n\n\n\n\nSanta Barbara county is located on the coast of Southern California (coordinates: 34.6099° N, 120.0665° W) and has a Mediterranean biome that has recently experienced prolonged droughts and is prone to wildfires.\n\n\n\nOn December 4, 2017 some particularly high winds created an electrical arc between multiple power lines and the Thomas Fire resulted, burning for a month and a half. As the fire made its way up the coast of California, it blanketed the surrounding cities in a thick cloud of smoke and ash. The following analyis visualizes the air quality in Santa Barbara county during 2017 and 2018.\n\n\nThe air quality data I acquired from the US EPA includes all counties, so it needs to be filtered to Santa Barbara county in addition to general tidying of column names. Tidying and converting the date column to the index is useful for plotting, as well as calculating a rolling average.\n\n\nCode\n# join the aqi datasets together\naqi = pd.concat([aqi_17, aqi_18])\n\n# tidy aqi column names\naqi.columns = aqi.columns.str.lower().str.replace(' ','_')\n\n# filter by county name, only keeping necessary columns\naqi_sb = aqi[aqi.county_name == 'Santa Barbara'].loc[:,'date':'number_of_sites_reporting']\n\n# convert date column from string to timestamps\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n\n# set the date column to be the index\naqi_sb = aqi_sb.set_index('date')\n\n# create new column to store the rolling 5 day averages of AQI\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()\n\n\n\n\n\n\nThe following plot shows the daily air quality (light green) in Santa Barbara county from 2017 - 2018 as well as a 5-day rolling average (dark green) to demonstrate mean AQI levels on a 5 day scale.\n\n\nCode\n# plot daily AQI and 5-day average with updated labels, title, and colors\naqi_sb.plot(y = ['aqi', 'five_day_average'],\n            xlabel = 'Date',\n            ylabel = 'AQI',\n            color = {'aqi':'lightgreen',\n                    'five_day_average':'darkgreen'},\n            title = 'Air Quality Index in Santa Barbara County (2017-2018)')\n\nplt.show()\n\n\n\n\n\nWe can see a huge spike in December 2017 that coincides with the timeline of the Thomas Fire. According to AirNow, an AQI above 150 is considered Unhealthy for the general population, and over 200 is Very Unhealthy. The daily measurements during the Thomas Fire peak at well over 250, and the average measurements peak at 200. Therefore, most if not all, residents of Santa Barbara county were exposed to very high health risks for the duration of the Thomas Fire.\n\n\n\nIn total, the Thomas Fire burned 281,893 acres over 40 days. When heavy rainfall came down in the early hours of January 9th, 2018, the recently burned, and therefore destabilized, foothills of Santa Barbara crumbled and led to a devastating mudslide in the town of Montecito. The following analysis will visualize the full perimeter of the fire, along with the burn scar it left behind.\n\n\n\n\nThe Landsat raster data contains an extra band and coordinates that are not necessary for this analysis so we will drop them for more efficient processing.\n\n\nCode\n# drop extra dimension \nlandsat = landsat.squeeze().drop('band')\n\n\n\n\n\nThe CA fire perimeter shapefiles require some tidying before we reproject to the same coordinate reference system (CRS) as the Landsat raster data. Reprojection is necessary for accurate plotting. The final step is selecting our fire of interest–the Thomas Fire.\n\n\nCode\n# update ca_fire column names to lowercase\nca_fire.columns = ca_fire.columns.str.lower()\n\n# Reproject shapefile to raster CRS for plotting\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n\n# select thomas fire from ca fire perimeters for easier plotting\nthomas = ca_fire[ca_fire.fire_name == \"THOMAS\"]\n\n\n\n\n\n\n\nWe will map the Thomas Fire perimeter (in red) on top of a false color image of Santa Barbara County. We are using the shortwave infrared, near-infrared, and red bands from the Landsat raster. With this combination of bands, we will be able to clearly see any burned area in red.\n\n\nCode\n# map false color image with thomas fire perimeter\nfig, ax = plt.subplots()\n\n# plot false color image\nlandsat[['swir22','nir08','red']].to_array().plot.imshow(robust = True,\n                                                        ax = ax)\n# plot thomas fire perimeter in red\nthomas.boundary.plot(ax = ax,\n            color = \"red\",\n                    linewidth = 0.8)\n\n# create thomas fire patch for legend\nthomas_patch = mlines.Line2D([],[],\n                             color = \"red\",\n                             linestyle = \"-\",\n                             label = \"Thomas Fire Perimeter\")\n\n# add legend to label thomas fire perimeter\nax.legend(handles = [thomas_patch], \n          frameon = True,\n         loc = 'upper right')\n\n# add map title\nplt.title('Santa Barbara Thomas Fire (2017)')\n\n# turn off axes\nax.axis('off')\n\nplt.show()\n\n\n\n\n\nThe Thomas Fire perimeter almost perfectly encompasses the burn scar it left behind, which is the large area colored red.\n\n\n\nLet’s take one last look at our analysis results:\n \nThe Thomas Fire had a very large impact on Santa Barbara county both while it was burning, and after it was finally contained. We saw a huge spike in the air quality–at unhealthy and very unhealthy levels during December 2017. Additionally, the fire left a huge burn scar that consequently led to another devastating natural disaster."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#about-the-analysis",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#about-the-analysis",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "The Thomas fire was a huge wildfire that burned a large part of Santa Barbara and Ventura counties during December 2017, and was the largest recorded California wildfire at the time. Residents of both counties and beyond were greatly affected by the destruction of their homes, widespread evacuations, and schools shutting down. The following analysis gives insight on the drastic impacts the Thomas fire had on the local air quality, as well as the land area it burned.\n\n\n\n\nFetch vector data from an online repository\nTime series analysis\nVisualize raster data\nFalse color imagery\nPlotting with Matplotlib.pyplot\n\n\n\n\n(1) Air Quality Index (AQI)\nOutdoor daily air quality measurements in US counties can be retrieved from the US Environmental Protection Agency (EPA). It can then be filtered to a county (or counties) of interest–in this case, Santa Barbara county.\n(2) Landsat raster data\nThe raster data was accessed and preprocessed in the Microsoft Planetary Computer from their Landsat Collection 2 Level-2 dataset. It contains a simplified collection of red, green, blue, near-infrared, and shortwave infrared bands that were collected by the Landsat 8 satellite.\n(3) CA Fire Perimeters\nSince the majority of the Thomas Fire burned during December 2017, I accessed the shapefiles of fire perimeters in California during 2017, provided by CAL FIRE.\n\n\n\nUS Environmental Protection Agency (2023). Daily AQI by County [Data File]. Available from https://aqs.epa.gov/aqsweb/airdata/download_files.html#AQI. Accessed October 25, 2023\nMicrosoft Planetary Computer. Landsat Collection 2 Level-2 [Dataset]. Available from https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2. Accessed November 28, 2023\nCalifornia Department of Forestry and Fire Protection (2023). California Fire Perimeters (all) [Data File]. Available from https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about. Accessed November 28, 2023"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#importing-libraries-and-functions",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#importing-libraries-and-functions",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "Code\nimport os\nimport pandas as pd\n\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#importing-the-data",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#importing-the-data",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "The air quality data can be accessed via URL. The Landsat raster data and California fire perimeters were downloaded and stored in a local folder which is accessed directly.\n\n\nCode\n# 2017 and 2018 air quality data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\n\n# import landsat raster data by calling a filepath with os\nlandsat = rioxr.open_rasterio(os.path.join(os.getcwd(),'data', 'landsat8-2018-01-26-sb-simplified.nc'))\n\n# ca fire perimeters\nca_fire = gpd.read_file('data/California_Fire_Perimeters_2017/California_Fire_Perimeters_2017.shp')"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#geographical-context-of-data",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#geographical-context-of-data",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "Santa Barbara county is located on the coast of Southern California (coordinates: 34.6099° N, 120.0665° W) and has a Mediterranean biome that has recently experienced prolonged droughts and is prone to wildfires."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#analyzing-impact-on-air-quality",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#analyzing-impact-on-air-quality",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "On December 4, 2017 some particularly high winds created an electrical arc between multiple power lines and the Thomas Fire resulted, burning for a month and a half. As the fire made its way up the coast of California, it blanketed the surrounding cities in a thick cloud of smoke and ash. The following analyis visualizes the air quality in Santa Barbara county during 2017 and 2018.\n\n\nThe air quality data I acquired from the US EPA includes all counties, so it needs to be filtered to Santa Barbara county in addition to general tidying of column names. Tidying and converting the date column to the index is useful for plotting, as well as calculating a rolling average.\n\n\nCode\n# join the aqi datasets together\naqi = pd.concat([aqi_17, aqi_18])\n\n# tidy aqi column names\naqi.columns = aqi.columns.str.lower().str.replace(' ','_')\n\n# filter by county name, only keeping necessary columns\naqi_sb = aqi[aqi.county_name == 'Santa Barbara'].loc[:,'date':'number_of_sites_reporting']\n\n# convert date column from string to timestamps\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n\n# set the date column to be the index\naqi_sb = aqi_sb.set_index('date')\n\n# create new column to store the rolling 5 day averages of AQI\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#plot-santa-barbara-county-aqi-2017-2018",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#plot-santa-barbara-county-aqi-2017-2018",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "The following plot shows the daily air quality (light green) in Santa Barbara county from 2017 - 2018 as well as a 5-day rolling average (dark green) to demonstrate mean AQI levels on a 5 day scale.\n\n\nCode\n# plot daily AQI and 5-day average with updated labels, title, and colors\naqi_sb.plot(y = ['aqi', 'five_day_average'],\n            xlabel = 'Date',\n            ylabel = 'AQI',\n            color = {'aqi':'lightgreen',\n                    'five_day_average':'darkgreen'},\n            title = 'Air Quality Index in Santa Barbara County (2017-2018)')\n\nplt.show()\n\n\n\n\n\nWe can see a huge spike in December 2017 that coincides with the timeline of the Thomas Fire. According to AirNow, an AQI above 150 is considered Unhealthy for the general population, and over 200 is Very Unhealthy. The daily measurements during the Thomas Fire peak at well over 250, and the average measurements peak at 200. Therefore, most if not all, residents of Santa Barbara county were exposed to very high health risks for the duration of the Thomas Fire."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#mapping-fire-perimeter-and-impact-on-land-quality",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#mapping-fire-perimeter-and-impact-on-land-quality",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "In total, the Thomas Fire burned 281,893 acres over 40 days. When heavy rainfall came down in the early hours of January 9th, 2018, the recently burned, and therefore destabilized, foothills of Santa Barbara crumbled and led to a devastating mudslide in the town of Montecito. The following analysis will visualize the full perimeter of the fire, along with the burn scar it left behind.\n\n\n\n\nThe Landsat raster data contains an extra band and coordinates that are not necessary for this analysis so we will drop them for more efficient processing.\n\n\nCode\n# drop extra dimension \nlandsat = landsat.squeeze().drop('band')\n\n\n\n\n\nThe CA fire perimeter shapefiles require some tidying before we reproject to the same coordinate reference system (CRS) as the Landsat raster data. Reprojection is necessary for accurate plotting. The final step is selecting our fire of interest–the Thomas Fire.\n\n\nCode\n# update ca_fire column names to lowercase\nca_fire.columns = ca_fire.columns.str.lower()\n\n# Reproject shapefile to raster CRS for plotting\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n\n# select thomas fire from ca fire perimeters for easier plotting\nthomas = ca_fire[ca_fire.fire_name == \"THOMAS\"]"
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#map-thomas-fire-perimeter-and-burn-scar",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#map-thomas-fire-perimeter-and-burn-scar",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "We will map the Thomas Fire perimeter (in red) on top of a false color image of Santa Barbara County. We are using the shortwave infrared, near-infrared, and red bands from the Landsat raster. With this combination of bands, we will be able to clearly see any burned area in red.\n\n\nCode\n# map false color image with thomas fire perimeter\nfig, ax = plt.subplots()\n\n# plot false color image\nlandsat[['swir22','nir08','red']].to_array().plot.imshow(robust = True,\n                                                        ax = ax)\n# plot thomas fire perimeter in red\nthomas.boundary.plot(ax = ax,\n            color = \"red\",\n                    linewidth = 0.8)\n\n# create thomas fire patch for legend\nthomas_patch = mlines.Line2D([],[],\n                             color = \"red\",\n                             linestyle = \"-\",\n                             label = \"Thomas Fire Perimeter\")\n\n# add legend to label thomas fire perimeter\nax.legend(handles = [thomas_patch], \n          frameon = True,\n         loc = 'upper right')\n\n# add map title\nplt.title('Santa Barbara Thomas Fire (2017)')\n\n# turn off axes\nax.axis('off')\n\nplt.show()\n\n\n\n\n\nThe Thomas Fire perimeter almost perfectly encompasses the burn scar it left behind, which is the large area colored red."
  },
  {
    "objectID": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#conclusion",
    "href": "blog/2023-12-23-eds220-thomas-fire/thomas-fire-analysis-blog.html#conclusion",
    "title": "Visualization of Thomas Fire Impact on Santa Barbara",
    "section": "",
    "text": "Let’s take one last look at our analysis results:\n \nThe Thomas Fire had a very large impact on Santa Barbara county both while it was burning, and after it was finally contained. We saw a huge spike in the air quality–at unhealthy and very unhealthy levels during December 2017. Additionally, the fire left a huge burn scar that consequently led to another devastating natural disaster."
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "Santa Barbara Coast\n\n\n\n\nPhytoplankton play a key role in both oceanic food webs and the global carbon cycle. Although they only make up 0.2% of the global primary producer biomass, phytoplankton are responsible for nearly half of Earth’s primary production (Field et al 1998). Every marine organism relies on phytoplankton directly or indirectly for fuel and through photosynthesis, phytoplankton convert inorganic carbon, CO2, into organic carbon. It is then essential to study them to understand how they can mitigate and/or be affected by climate change. Since all photosynthetically active phytoplankton use chlorophyll-a pigment to produce their own fuel, chlorophyll-a is commonly used as a proxy for phytoplankton biomass.\nIn order to grow and thrive, phytoplankton rely on certain nutrients–phosphate (PO4) and dissolved inorganic nitrogen (nitrate, nitrite, ammonium). It has been proven that on short timescales, such as weeks and months, the previously mentioned nutrients are dominant drivers of changes in chlorophyll-a concentration, with a directly proportional relationship (Blauw et al 2018).\nCoastal ocean waters are teeming with life and are more productive compared to the open ocean, but are also most vulnerable to climate change (Sigman and Hain 2012). By growing our understanding of the chemistry and biology in these coastal areas, we can better protect and predict future changes due to climate change and ocean acidification.\nWhile learning about the close relationship between chlorophyll-a and nutrients, I began to wonder if, with a large enough dataset, a statistically significant relationship could be characterized. I knew that my hometown, Santa Barbara, had a Long-Term Ecological Research project with years worth of open access coastal chemistry and nutrient data, so I set out to answer this question with their data.\n\n\n\nThe Santa Barbara Coastal Long-Term Ecological Research program has been conducting monthly nearshore cruises along the Santa Barbra channel at 16 sites since 2000. Water samples are collected with a rosette sampler and multiple nutrients and water chemistry parameters are measured. The data are accessible to anyone on the Environmental Data Initiative or DataOne websites. Included in this dataset are measurements of chlorophyll-a, phosphate, nitrate, nitrite, and ammonium concentrations, which I used for my analysis.\n\n\n\nSBC LTER sampling locations\n\n\n\n\n\n\n\nI imported the data via a URL leading to the DataOne website, but it could also be downloaded and stored locally.\nInitial data cleaning was done in the same step as importing by piping. The initial data frame was relatively tidy, but needed certain values to be replaced with NAs: any 99999 values where data was missing and nutrient measurements labeled “BDL” for below detection level.\nSince chlorophyll-a concentration is driven by phosphate and dissolved inorganic nitrogen, a new column was created with the sum of the components of dissolved inorganic nitrogen: nitrite, nitrate and ammonium. For more accurate sum totals, an intermediate data frame was created in order to convert the NA values to 0. Once the sums were calculated, any sums equaling zero were converted back to NAs and the dissolved inorganic nitrogen column was added via cbind() back to the original data frame. Lastly, a new dataframe was created with only the necessary variables for more efficient handling.\n\n\nCode\nbottle &lt;- read_delim(\"https://cn.dataone.org/cn/v2/resolve/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-sbc%2F10%2F27%2F572816525903a898f686df5b64eb3852\",\n                     # BDL = below detection limit, so convert those to NA\n                     na = \"BDL\",\n                     show_col_types = FALSE) %&gt;% \n  clean_names() %&gt;% \n  # convert any 99999 value to NA values \n  replace_with_na_all(condition = ~.x == 99999) %&gt;% \n  # two rows at station Q2 which is not in the meta data and a positive longitude...\n  filter(station != \"Q2\")\n# problems(bottle)\n# bottle &lt;- read_delim(here(\"data\", \"LTER_monthly_bottledata_20220930.txt\"), \n                     # BDL = below detection limit, so convert those to NA\n                    # na = \"BDL\") %&gt;% \n\n\n\n\nCode\n# select preferred nitrogen columns\nbottle_nutrients &lt;- bottle %&gt;% \n  select(no2_no3_umol_l, ammonia_umol_l)\n\n# convert any NAs to 0 for more accurate sums\nbottle_nutrients[is.na(bottle_nutrients)] &lt;- 0\n\n# create column DIN as sum of the nitrogen components\nbottle_nutrients &lt;- bottle_nutrients %&gt;% \n  mutate(din_umol_l = no2_no3_umol_l + ammonia_umol_l)\n\n# convert and 0s back to NA\nbottle_nutrients$din_umol_l[bottle_nutrients$din_umol_l == 0] &lt;- NA\n\n# create the data frame we want by adding DIN column and only selecting chl and nutrients\nbottle_complete &lt;- bottle %&gt;% \n  cbind(din_umol_l = bottle_nutrients$din_umol_l) %&gt;% \n  select(chl_a_ug_l, po4_umol_l, din_umol_l)\n\n\n\n\n\nThe plan was to run an ordinary least squares (OLS) multiple linear regression between chlorophyll-a and phosphate and dissolved inorganic nitrogen. Before proceeding, I explored the distribution of each of the variables and found that chlorophyll-a had some large outliers which created a positive skew and long right tail (Figure 1). In order to account for the outliers and lower the leverage of large values in the model, the log of chlorophyll-a concentration was used (Figure 2).\n\n\nCode\nggplot(data = bottle_complete) +\n  geom_histogram(aes(chl_a_ug_l), \n                 fill = \"darkgreen\", \n                 color = \"white\",\n                 bins = 50) +\n  labs(x = \"[Chlorophyll-a] (\\u03BCg/L)\",\n       y = \"Frequency\",\n       title = \"Chl-a Distribution\",\n       caption = \"Fig 1. Distribution of chlorophyll-a concentrations in coastal water samples.\") +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust=0))\n\n\n\n\n\nA new column was added, the log of chlorphyll-a concentration, and was utilized in the following regression model.\n\n\nCode\n# add log(chl-a) column\nbottle_complete &lt;- bottle_complete %&gt;% \n  mutate(log_chla = log(chl_a_ug_l))\n\n# check distributions again\nggplot(data = bottle_complete) +\n  geom_histogram(aes(log_chla), \n                 fill = \"darkgreen\", \n                 color = \"white\") +\n  labs(x = \"log[Chlorophyll-a]\",\n       y = \"Frequency\",\n       title = \"log(chl-a) Distribution\",\n       caption = \"Fig 2. Distribution of the log of chlorophyll-a concentration.\") +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust=0)) \n\n\n\n\n\n\n\n\n\nNow that the log of chlorophyll-a concentration lowers the leverage of large values, multiple linear regression was implemented to answer my question. Nitrogen and phosphorous are co-limiting nutrients and phytoplankton rely on a certain ratio of nutrients for optimal growth – which is known as the Redfield Ratio. Due to this, the response of phytoplankton to each nutrient can actually depend on the supply of the other (Frost et al 2023). Due to this phenomenon, an interaction term between phosphorous and dissolved inorganic nitrogen was included in the regression model.\n\n\nCode\n# multiple linear regression with interaction term\nmodel &lt;- lm(log_chla ~ po4_umol_l + din_umol_l + din_umol_l:po4_umol_l, data = bottle_complete)\n\n# sjplot for clean output table\nsjPlot::tab_model(model, digits = 3, show.se = TRUE, \n                  title = \"Table 1. Summary of log-linear multiple regression model with interaction term.\", string.se = \"SE\") \n\n\n\nTable 1. Summary of log-linear multiple regression model with interaction term.\n\n\n \nlog chla\n\n\nPredictors\nEstimates\nSE\nCI\np\n\n\n(Intercept)\n0.711\n0.044\n0.625 – 0.796\n&lt;0.001\n\n\npo4 umol l\n-0.482\n0.150\n-0.777 – -0.188\n0.001\n\n\ndin umol l\n0.069\n0.013\n0.042 – 0.095\n&lt;0.001\n\n\npo4 umol l × din umol l\n-0.037\n0.008\n-0.054 – -0.020\n&lt;0.001\n\n\nObservations\n2473\n\n\nR2 / R2 adjusted\n0.021 / 0.020\n\n\n\n\n\n\n\n\n\nThis model produces a lot of outputs, so let’s interpret what each coefficient value means:\n\n(Intercept): the exponential of the intercept (2.035) is the predicted concentration of chlorophyll-a in ug/L when the concentrations of both phosphate and dissolved inorganic nitrogen are zero.\npo4 umol l: a one micro mole per liter increase in phosphate changes the concentration of chlorophyll-a by -48.2%, when there is no dissolved inorganic nitrogen in the water.\ndin_umol_l: a one micro mole per liter increase in dissolved inorganic nitrogen changes the concentration of chlorophyll-a by 6.9%, when there is no phosphate in the water.\npo4 umol l x din umol l: Since both parameters in the interaction term are continuous variables, this coefficient describes the marginal effect of both nutrients on each other’s slope of their relationship with log(chlorophyll-a):\n\neffect of phosphate:-0.48 + -0.04*DIN\neffect of nitrogen: 0.07 + -0.04*PO4\n\n\n\n\n\nSince the interaction is between two continuous variables, the slope of one nutrient’s relationship with chlorphyll-a is conditional on the concentration of the other. This is called the marginal effect. We can actually plot the marginal effects of phosphate and nitrogen on each other to better visualize:\n\n\nCode\ndevtools::source_url(\"https://raw.githubusercontent.com/jkarreth/JKmisc/master/ggintfun.R\")\n\nggintfun(obj = model, varnames = c(\"po4_umol_l\", \"din_umol_l\"), \n         varlabs = c(\"Phosphate\", \"Dissolved Inorganic Nitrogen\"),\n         title = FALSE, rug = TRUE,\n         twoways = TRUE)\n\n\n Fig 3. Marginal effects of phosphate (left) and dissolved inorganic nitrogen (right).\n\n\n\n\nAll of the coeefficients of the regression model are significant at a significance level of \\(\\alpha = 0.01\\) (Table 1). Therefore this relationship between chlorophyll-a and phosphate and dissolved inorganic nitrogen can be considered statistically significant. However, when investigating the relationship between the two nutrients, phosphate and dissolved inorganic nitrogen are colinear (Figure 4). Due to this, the coefficients in Table 1 must be considered with confidence because the model could be very sensitive to changes in the nutrient concentrations. Additionally, although the coefficients may appear significant, the adjusted \\(R^2\\), 0.02, indicates that these nutrients explain very little of the total variability in chlorphyll-a.\n\n\nCode\nggplot(data = bottle_complete, aes(x = din_umol_l, y = po4_umol_l)) +\n  geom_point(alpha = 0.5) +\n  labs(x = \"Dissolved Inorganic Nitrogen (\\u03BCmol/L)\",\n       y = \"Phosphate (\\u03BCmol/L)\",\n       caption = \"Fig 4. Relationship between measured dissolved inorganic nitrogen and phosphate demonstrating collinearity\") +\n  geom_smooth(method = lm, se = FALSE,\n              color = \"darkseagreen\") +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, 25)) +\n  scale_y_continuous(expand = c(0,0), limits = c(0, 3)) +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust = 0))\n\n\n\n\n\n\n\n\nAlthough nutrients play a large role in chlorophyll-a concentration, and therefore phytoplankton biomass, there are other drivers with high importance including temperature and available light. Future work should include isolating and controlling for temperature and light availability to better characterize the relationship between chlorophyll-a and nutrients. Once a better model fit is constructed, further work could include investigating the affect of site and depth in the channel have on this relationship.\n\n\n\nBlauw, A. N., E. Benincà, R. W.P.M. Laane, N. Greenwood and J. Huisman. 2018. Predictability and environmental drivers of chlorophyll fluctuations vary across different time scales and regions of the North Sea. Progress in Oceanography 161: 1-18. ISSN 0079-6611. doi:10.1016/j.pocean.2018.01.005.\nField, C. B., M. J., Behrenfeld, J. T., Randerson, and P. Falkowski.1998. Primary production of the biosphere: Integrating terrestrial and oceanic components. Science 281: 237-240. doi:10.1126/science.281.5374.237\nFrost, P.C., Pearce, N.J.T., Berger, S.A., Gessner, M.O., Makower, A.K., Marzetz, V., Nejstgaard, J.C., Pralle, A., Schälicke, S., Wacker, A., Wagner, N.D. and Xenopoulos, M.A. (2023), Interactive effects of nitrogen and phosphorus on growth and stoichiometry of lake phytoplankton. Limnol Oceanogr, 68: 1172-1184. https://doi.org/10.1002/lno.12337\nSigman, D. M. & Hain, M. P. (2012) The Biological Productivity of the Ocean. Nature Education Knowledge 3(10):21. https://www.nature.com/scitable/knowledge/library/the-biological-productivity-of-the-ocean-70631104/ Accessed December 15, 2023"
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#background",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#background",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "Phytoplankton play a key role in both oceanic food webs and the global carbon cycle. Although they only make up 0.2% of the global primary producer biomass, phytoplankton are responsible for nearly half of Earth’s primary production (Field et al 1998). Every marine organism relies on phytoplankton directly or indirectly for fuel and through photosynthesis, phytoplankton convert inorganic carbon, CO2, into organic carbon. It is then essential to study them to understand how they can mitigate and/or be affected by climate change. Since all photosynthetically active phytoplankton use chlorophyll-a pigment to produce their own fuel, chlorophyll-a is commonly used as a proxy for phytoplankton biomass.\nIn order to grow and thrive, phytoplankton rely on certain nutrients–phosphate (PO4) and dissolved inorganic nitrogen (nitrate, nitrite, ammonium). It has been proven that on short timescales, such as weeks and months, the previously mentioned nutrients are dominant drivers of changes in chlorophyll-a concentration, with a directly proportional relationship (Blauw et al 2018).\nCoastal ocean waters are teeming with life and are more productive compared to the open ocean, but are also most vulnerable to climate change (Sigman and Hain 2012). By growing our understanding of the chemistry and biology in these coastal areas, we can better protect and predict future changes due to climate change and ocean acidification.\nWhile learning about the close relationship between chlorophyll-a and nutrients, I began to wonder if, with a large enough dataset, a statistically significant relationship could be characterized. I knew that my hometown, Santa Barbara, had a Long-Term Ecological Research project with years worth of open access coastal chemistry and nutrient data, so I set out to answer this question with their data."
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#data",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#data",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "The Santa Barbara Coastal Long-Term Ecological Research program has been conducting monthly nearshore cruises along the Santa Barbra channel at 16 sites since 2000. Water samples are collected with a rosette sampler and multiple nutrients and water chemistry parameters are measured. The data are accessible to anyone on the Environmental Data Initiative or DataOne websites. Included in this dataset are measurements of chlorophyll-a, phosphate, nitrate, nitrite, and ammonium concentrations, which I used for my analysis.\n\n\n\nSBC LTER sampling locations"
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#methods",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#methods",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "I imported the data via a URL leading to the DataOne website, but it could also be downloaded and stored locally.\nInitial data cleaning was done in the same step as importing by piping. The initial data frame was relatively tidy, but needed certain values to be replaced with NAs: any 99999 values where data was missing and nutrient measurements labeled “BDL” for below detection level.\nSince chlorophyll-a concentration is driven by phosphate and dissolved inorganic nitrogen, a new column was created with the sum of the components of dissolved inorganic nitrogen: nitrite, nitrate and ammonium. For more accurate sum totals, an intermediate data frame was created in order to convert the NA values to 0. Once the sums were calculated, any sums equaling zero were converted back to NAs and the dissolved inorganic nitrogen column was added via cbind() back to the original data frame. Lastly, a new dataframe was created with only the necessary variables for more efficient handling.\n\n\nCode\nbottle &lt;- read_delim(\"https://cn.dataone.org/cn/v2/resolve/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-sbc%2F10%2F27%2F572816525903a898f686df5b64eb3852\",\n                     # BDL = below detection limit, so convert those to NA\n                     na = \"BDL\",\n                     show_col_types = FALSE) %&gt;% \n  clean_names() %&gt;% \n  # convert any 99999 value to NA values \n  replace_with_na_all(condition = ~.x == 99999) %&gt;% \n  # two rows at station Q2 which is not in the meta data and a positive longitude...\n  filter(station != \"Q2\")\n# problems(bottle)\n# bottle &lt;- read_delim(here(\"data\", \"LTER_monthly_bottledata_20220930.txt\"), \n                     # BDL = below detection limit, so convert those to NA\n                    # na = \"BDL\") %&gt;% \n\n\n\n\nCode\n# select preferred nitrogen columns\nbottle_nutrients &lt;- bottle %&gt;% \n  select(no2_no3_umol_l, ammonia_umol_l)\n\n# convert any NAs to 0 for more accurate sums\nbottle_nutrients[is.na(bottle_nutrients)] &lt;- 0\n\n# create column DIN as sum of the nitrogen components\nbottle_nutrients &lt;- bottle_nutrients %&gt;% \n  mutate(din_umol_l = no2_no3_umol_l + ammonia_umol_l)\n\n# convert and 0s back to NA\nbottle_nutrients$din_umol_l[bottle_nutrients$din_umol_l == 0] &lt;- NA\n\n# create the data frame we want by adding DIN column and only selecting chl and nutrients\nbottle_complete &lt;- bottle %&gt;% \n  cbind(din_umol_l = bottle_nutrients$din_umol_l) %&gt;% \n  select(chl_a_ug_l, po4_umol_l, din_umol_l)\n\n\n\n\n\nThe plan was to run an ordinary least squares (OLS) multiple linear regression between chlorophyll-a and phosphate and dissolved inorganic nitrogen. Before proceeding, I explored the distribution of each of the variables and found that chlorophyll-a had some large outliers which created a positive skew and long right tail (Figure 1). In order to account for the outliers and lower the leverage of large values in the model, the log of chlorophyll-a concentration was used (Figure 2).\n\n\nCode\nggplot(data = bottle_complete) +\n  geom_histogram(aes(chl_a_ug_l), \n                 fill = \"darkgreen\", \n                 color = \"white\",\n                 bins = 50) +\n  labs(x = \"[Chlorophyll-a] (\\u03BCg/L)\",\n       y = \"Frequency\",\n       title = \"Chl-a Distribution\",\n       caption = \"Fig 1. Distribution of chlorophyll-a concentrations in coastal water samples.\") +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust=0))\n\n\n\n\n\nA new column was added, the log of chlorphyll-a concentration, and was utilized in the following regression model.\n\n\nCode\n# add log(chl-a) column\nbottle_complete &lt;- bottle_complete %&gt;% \n  mutate(log_chla = log(chl_a_ug_l))\n\n# check distributions again\nggplot(data = bottle_complete) +\n  geom_histogram(aes(log_chla), \n                 fill = \"darkgreen\", \n                 color = \"white\") +\n  labs(x = \"log[Chlorophyll-a]\",\n       y = \"Frequency\",\n       title = \"log(chl-a) Distribution\",\n       caption = \"Fig 2. Distribution of the log of chlorophyll-a concentration.\") +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust=0))"
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#regression",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#regression",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "Now that the log of chlorophyll-a concentration lowers the leverage of large values, multiple linear regression was implemented to answer my question. Nitrogen and phosphorous are co-limiting nutrients and phytoplankton rely on a certain ratio of nutrients for optimal growth – which is known as the Redfield Ratio. Due to this, the response of phytoplankton to each nutrient can actually depend on the supply of the other (Frost et al 2023). Due to this phenomenon, an interaction term between phosphorous and dissolved inorganic nitrogen was included in the regression model.\n\n\nCode\n# multiple linear regression with interaction term\nmodel &lt;- lm(log_chla ~ po4_umol_l + din_umol_l + din_umol_l:po4_umol_l, data = bottle_complete)\n\n# sjplot for clean output table\nsjPlot::tab_model(model, digits = 3, show.se = TRUE, \n                  title = \"Table 1. Summary of log-linear multiple regression model with interaction term.\", string.se = \"SE\") \n\n\n\nTable 1. Summary of log-linear multiple regression model with interaction term.\n\n\n \nlog chla\n\n\nPredictors\nEstimates\nSE\nCI\np\n\n\n(Intercept)\n0.711\n0.044\n0.625 – 0.796\n&lt;0.001\n\n\npo4 umol l\n-0.482\n0.150\n-0.777 – -0.188\n0.001\n\n\ndin umol l\n0.069\n0.013\n0.042 – 0.095\n&lt;0.001\n\n\npo4 umol l × din umol l\n-0.037\n0.008\n-0.054 – -0.020\n&lt;0.001\n\n\nObservations\n2473\n\n\nR2 / R2 adjusted\n0.021 / 0.020\n\n\n\n\n\n\n\n\n\nThis model produces a lot of outputs, so let’s interpret what each coefficient value means:\n\n(Intercept): the exponential of the intercept (2.035) is the predicted concentration of chlorophyll-a in ug/L when the concentrations of both phosphate and dissolved inorganic nitrogen are zero.\npo4 umol l: a one micro mole per liter increase in phosphate changes the concentration of chlorophyll-a by -48.2%, when there is no dissolved inorganic nitrogen in the water.\ndin_umol_l: a one micro mole per liter increase in dissolved inorganic nitrogen changes the concentration of chlorophyll-a by 6.9%, when there is no phosphate in the water.\npo4 umol l x din umol l: Since both parameters in the interaction term are continuous variables, this coefficient describes the marginal effect of both nutrients on each other’s slope of their relationship with log(chlorophyll-a):\n\neffect of phosphate:-0.48 + -0.04*DIN\neffect of nitrogen: 0.07 + -0.04*PO4\n\n\n\n\n\nSince the interaction is between two continuous variables, the slope of one nutrient’s relationship with chlorphyll-a is conditional on the concentration of the other. This is called the marginal effect. We can actually plot the marginal effects of phosphate and nitrogen on each other to better visualize:\n\n\nCode\ndevtools::source_url(\"https://raw.githubusercontent.com/jkarreth/JKmisc/master/ggintfun.R\")\n\nggintfun(obj = model, varnames = c(\"po4_umol_l\", \"din_umol_l\"), \n         varlabs = c(\"Phosphate\", \"Dissolved Inorganic Nitrogen\"),\n         title = FALSE, rug = TRUE,\n         twoways = TRUE)\n\n\n Fig 3. Marginal effects of phosphate (left) and dissolved inorganic nitrogen (right)."
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#discussion",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#discussion",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "All of the coeefficients of the regression model are significant at a significance level of \\(\\alpha = 0.01\\) (Table 1). Therefore this relationship between chlorophyll-a and phosphate and dissolved inorganic nitrogen can be considered statistically significant. However, when investigating the relationship between the two nutrients, phosphate and dissolved inorganic nitrogen are colinear (Figure 4). Due to this, the coefficients in Table 1 must be considered with confidence because the model could be very sensitive to changes in the nutrient concentrations. Additionally, although the coefficients may appear significant, the adjusted \\(R^2\\), 0.02, indicates that these nutrients explain very little of the total variability in chlorphyll-a.\n\n\nCode\nggplot(data = bottle_complete, aes(x = din_umol_l, y = po4_umol_l)) +\n  geom_point(alpha = 0.5) +\n  labs(x = \"Dissolved Inorganic Nitrogen (\\u03BCmol/L)\",\n       y = \"Phosphate (\\u03BCmol/L)\",\n       caption = \"Fig 4. Relationship between measured dissolved inorganic nitrogen and phosphate demonstrating collinearity\") +\n  geom_smooth(method = lm, se = FALSE,\n              color = \"darkseagreen\") +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, 25)) +\n  scale_y_continuous(expand = c(0,0), limits = c(0, 3)) +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust = 0))"
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#conclusion",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#conclusion",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "Although nutrients play a large role in chlorophyll-a concentration, and therefore phytoplankton biomass, there are other drivers with high importance including temperature and available light. Future work should include isolating and controlling for temperature and light availability to better characterize the relationship between chlorophyll-a and nutrients. Once a better model fit is constructed, further work could include investigating the affect of site and depth in the channel have on this relationship."
  },
  {
    "objectID": "blog/2023-12-15-eds222-chl-nutrients/index.html#references",
    "href": "blog/2023-12-15-eds222-chl-nutrients/index.html#references",
    "title": "Relationship between chlorophyll-a and nutrients in the Santa Barbara Channel",
    "section": "",
    "text": "Blauw, A. N., E. Benincà, R. W.P.M. Laane, N. Greenwood and J. Huisman. 2018. Predictability and environmental drivers of chlorophyll fluctuations vary across different time scales and regions of the North Sea. Progress in Oceanography 161: 1-18. ISSN 0079-6611. doi:10.1016/j.pocean.2018.01.005.\nField, C. B., M. J., Behrenfeld, J. T., Randerson, and P. Falkowski.1998. Primary production of the biosphere: Integrating terrestrial and oceanic components. Science 281: 237-240. doi:10.1126/science.281.5374.237\nFrost, P.C., Pearce, N.J.T., Berger, S.A., Gessner, M.O., Makower, A.K., Marzetz, V., Nejstgaard, J.C., Pralle, A., Schälicke, S., Wacker, A., Wagner, N.D. and Xenopoulos, M.A. (2023), Interactive effects of nitrogen and phosphorus on growth and stoichiometry of lake phytoplankton. Limnol Oceanogr, 68: 1172-1184. https://doi.org/10.1002/lno.12337\nSigman, D. M. & Hain, M. P. (2012) The Biological Productivity of the Ocean. Nature Education Knowledge 3(10):21. https://www.nature.com/scitable/knowledge/library/the-biological-productivity-of-the-ocean-70631104/ Accessed December 15, 2023"
  }
]